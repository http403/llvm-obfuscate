# syntax=docker/dockerfile:1

###
# Get number of processors
###
FROM alpine as cpu_measure
RUN apk add --no-cache coreutils
RUN echo "NumJobs=$(nproc)" > /tmp/env_vars

###
# Setup the environment
###
FROM catthehacker/ubuntu:act-latest as source
SHELL ["/bin/bash", "-c"]
WORKDIR /tmp

# Install dependencies
RUN <<EOF
apt update
apt install -y cmake chrpath gcc-multilib ninja-build
EOF

# Get the repo with submodules
# RUN <<EOF
# git clone https://github.com/http403/llvm-obfuscate llvm-obfuscate
# cd llvm-obfuscate
# git submodule init && git submodule update
# EOF
COPY . /tmp/llvm-obfuscate

# Install sccache
COPY ./utils/sccache /usr/local/bin/sccache

###
# Build the cache with sccache
###
FROM source as build_cache
SHELL ["/bin/bash", "-c"]
WORKDIR /tmp

RUN --mount=type=cache,target=/root/.cache/sccache,sharing=locked <<EOF
cmake -G Ninja -S /tmp/llvm-obfuscate/llvm -B build \
    -C /tmp/llvm-obfuscate/clang/cmake/caches/Release.cmake \
    -DCMAKE_C_COMPILER_LAUNCHER=sccache \
    -DCMAKE_CXX_COMPILER_LAUNCHER=sccache \
    -DCMAKE_POSITION_INDEPENDENT_CODE=ON
ninja -v -C build clang
EOF

###
# Build the binrary
###
FROM source
SHELL ["/bin/bash", "-c"]
WORKDIR /tmp

COPY --from=cpu_measure /tmp/env_vars /tmp/env_vars

# Configure CMake and build the binary
RUN --mount=type=cache,target=/root/.cache/sccache,sharing=locked,from=build_cache <<EOF
. /tmp/env_vars && export NumJobs
SCCACHE_DIRECT=true \
SCCACHE_LOCAL_RW_MODE=read_only \
cmake -B build -G Ninja -S /tmp/llvm-obfuscate/llvm \
    -DCMAKE_BUILD_TYPE=Release \
    -DLLVM_ENABLE_ASSERTIONS=OFF \
    -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
    -DLLVM_ENABLE_PROJECTS='llvm;clang;clang-tools-extra;lld;mlir' \
    -DLLVM_LIT_ARGS="-j $NumJobs -v" \
    -DLLVM_ENABLE_RUNTIMES='compiler-rt;libcxx;libcxxabi;libunwind' \
    -DCMAKE_C_COMPILER_LAUNCHER=sccache \
    -DCMAKE_CXX_COMPILER_LAUNCHER=sccache
ninja -C build -j $NumJobs -v -l $((NumJobs + 1))
EOF

# Package it up
RUN <<EOF
export DESTDIR='clang+llvm+ollvm-16.0.6'
ninja -C build install
tar -C build -cf - "$DESDIR" | gzip -9c > $DESTDIR.tar.gz
EOF

ENTRYPOINT ["/bin/bash"]
